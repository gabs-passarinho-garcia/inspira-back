// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ContentCategory {
  FILM
  VIDEO
  DESIGN
  FASHION
  PHOTOGRAPHY
  GAME
  MUSIC
  PODCAST
  COMICS
  LITERATURE
  THEATER
  DANCE
  OTHER
}

enum FundingStatus {
  PENDING
  ONGOING
  SUCCESSFUL
  FAILED
  CANCELED
}

enum FundingType {
  ALL_OR_NOTHING
  KEEP_IT_ALL
}

model Content {
  id        String   @id @default(uuid())
  title     String
  place     String
  description String
  author    String
  category  ContentCategory

  Funding   Funding? @relation("funding_content")


  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  createdBy String
  updatedBy String?
}

model Funding {
  id       String   @id @default(uuid())
  title     String
  description String
  goal      Int
  current   Int
  deadline  DateTime
  author    String
  status    FundingStatus
  type      FundingType

  Content   Content  @relation("funding_content", fields: [contentId], references: [id])
  contentId String @unique

  entries   FundingEntry[]

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  createdBy String
  updatedBy String?
}

model FundingEntry {
  id       String   @id @default(uuid())
  amount   Int
  sponsor   String
  funding  Funding  @relation(fields: [fundingId], references: [id])
  fundingId String

  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  createdBy String
  updatedBy String?
}
